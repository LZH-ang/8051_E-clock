C51 COMPILER V9.57.0.0   3231                                                              02/16/2022 14:01:03 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE 3231
OBJECT MODULE PLACED IN .\Objects\3231.obj
COMPILER INVOKED BY: D:\KEILC51  u5\C51\BIN\C51.EXE 3231.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -3231.lst) TABS(2) OBJECT(.\Objects\3231.obj)

line level    source

   1          
   2          #include "3231.h"
   3          #include "delay.h"
   4          #include "intrins.h"
   5          
   6          char hour,min,sec,year,mon,day,week;
   7          bit ack;    //Ó¦´ð±êÖ¾Î»
   8          
   9          /**********************************************
  10          //IIC Start
  11          **********************************************/
  12          void IIC_Start()
  13          {
  14   1        SCL = 1;    
  15   1        SDA = 1;
  16   1        SDA = 0;
  17   1        _nop_();
  18   1        SCL = 0;
  19   1      }
  20          
  21          /**********************************************
  22          //IIC Stop
  23          **********************************************/
  24          void IIC_Stop()
  25          {
  26   1        SCL = 1;
  27   1        SDA = 0;
  28   1        SDA = 1;
  29   1      }
  30          
  31          /********************************************************************************************************
  32          **  3231
  33          ********************************************************************************************************/
  34          
  35          
  36          uchar BCD2HEX(uchar val)
  37          {
  38   1        return  ((val>>4)*10)+(val&0x0f);
  39   1      }
  40          
  41          uchar HEX2BCD(uchar val)
  42          {
  43   1        return  (((val%100)/10)<<4)|(val%10);
  44   1      }
  45          
  46          
  47          void SendByte(uchar c)
  48          {
  49   1        uchar BitCnt;
  50   1        SCL=0;
  51   1        for(BitCnt=0;BitCnt<8;BitCnt++)         //Òª´«ËÍµÄÊý¾Ý³¤¶ÈÎª8Î»
  52   1        {
  53   2          if((c<<BitCnt)&0x80)
  54   2            SDA=1;                          //ÅÐ¶Ï·¢ËÍÎ»
C51 COMPILER V9.57.0.0   3231                                                              02/16/2022 14:01:03 PAGE 2   

  55   2          else 
  56   2            SDA=0; 
  57   2          _nop_();
  58   2          SCL=1;                            //ÖÃÊ±ÖÓÏßÎª¸ß£¬Í¨Öª±»¿ØÆ÷¿ªÊ¼½ÓÊÕÊý¾ÝÎ»
  59   2          Delay5us();                       //±£Ö¤Ê±ÖÓ¸ßµçÆ½ÖÜÆÚ´óÓÚ4¦Ìs   
  60   2          SCL=0;
  61   2        }
  62   1        SDA=1;                                  //8Î»·¢ËÍÍêºóÊÍ·ÅÊý¾ÝÏß£¬×¼±¸½ÓÊÕÓ¦´ðÎ»
  63   1        _nop_();
  64   1        SCL=1;
  65   1        Delay5us();
  66   1        if(SDA==1)
  67   1            ack=0;    
  68   1        else
  69   1            ack=1;                              //ÅÐ¶ÏÊÇ·ñ½ÓÊÕµ½Ó¦´ðÐÅºÅ
  70   1        SCL=0;
  71   1        Delay5us();
  72   1      }    
  73          
  74          uchar RcvByte()
  75          {
  76   1        uchar retc;
  77   1        uchar BitCnt;
  78   1      
  79   1        retc=0;
  80   1        SDA=1;                           //ÖÃÊý¾ÝÏßÎªÊäÈë·½Ê½
  81   1        for(BitCnt=0;BitCnt<8;BitCnt++)
  82   1        {
  83   2          SCL=0;                      //ÖÃÊ±ÖÓÏßÎªµÍ£¬×¼±¸½ÓÊÕÊý¾ÝÎ»       
  84   2          Delay5us();                 //Ê±ÖÓµÍµçÆ½ÖÜÆÚ´óÓÚ4.7¦Ìs           
  85   2          SCL=1;                      //ÖÃÊ±ÖÓÏßÎª¸ßÊ¹Êý¾ÝÏßÉÏÊý¾ÝÓÐÐ§
  86   2          Delay5us();
  87   2          retc=retc<<1;
  88   2          if(SDA==1)
  89   2              retc=retc+1;            //¶ÁÊý¾ÝÎ»,½ÓÊÕµÄÊý¾ÝÎ»·ÅÈëretcÖÐ
  90   2          Delay5us();
  91   2        }
  92   1        SCL=0;
  93   1        return(retc);
  94   1      }         
  95           
  96          void Ack_I2C(bit a)
  97          {
  98   1        SDA = a;  
  99   1        SCL=1;          
 100   1        Delay5us();             //Ê±ÖÓµÍµçÆ½ÖÜÆÚ´óÓÚ4us    
 101   1        SCL=0;                  //ÇåÊ±ÖÓÏß£¬Ç¯×¡I2C×ÜÏßÒÔ±ã¼ÌÐø½ÓÊÕ
 102   1        Delay5us();   
 103   1      }             
 104          
 105          uchar write_byte(uchar addr, uchar write_data)
 106          {
 107   1        IIC_Start();
 108   1        SendByte(DS3231_WriteAddress);
 109   1        if (ack == 0)
 110   1            return 0;
 111   1       
 112   1        SendByte(addr);   
 113   1        if (ack == 0)
 114   1            return 0;
 115   1       
 116   1        SendByte(write_data);
C51 COMPILER V9.57.0.0   3231                                                              02/16/2022 14:01:03 PAGE 3   

 117   1        if (ack == 0)
 118   1            return 0;
 119   1       
 120   1        IIC_Stop();
 121   1        Delay5us();      
 122   1        Delay5us();      
 123   1        return 1;
 124   1      }           
 125          
 126          uchar read_current()
 127          {
 128   1        uchar read_data;
 129   1        IIC_Start();
 130   1        SendByte(DS3231_ReadAddress);
 131   1        if(ack==0)
 132   1           return(0);       
 133   1        read_data = RcvByte();
 134   1        Ack_I2C(1);
 135   1        IIC_Stop();
 136   1        return read_data;
 137   1      }            
 138          
 139          uchar read_random(uchar random_addr)
 140          {
 141   1        uchar Tmp;
 142   1        IIC_Start();
 143   1        SendByte(DS3231_WriteAddress);
 144   1        if(ack==0)
 145   1            return(0);      
 146   1        SendByte(random_addr);
 147   1        if(ack==0)
 148   1            return(0);
 149   1        Tmp=read_current();
 150   1        if(random_addr==DS3231_HOUR) 
 151   1        Tmp&=0x3f;
 152   1                  
 153   1        return(BCD2HEX(Tmp));//¶¼×ª10½øÖÆÊä³ö
 154   1      }
 155          
 156          /***********************/
 157          uchar read_randomTmp(uchar random_addr)  //Õâ¸öÊÇ¶ÁÎÂ¶Èº¯Êý
 158          {
 159   1        uchar Tmp;
 160   1        write_byte(0x0e,0x20);//0x0e¼Ä´æÆ÷µÄCONVÎ»ÖÃ1¿ªÆôÎÂ¶È×ª»»£¬ÒªÕâ¾ä£¬ÎÂ¶ÈÊµÊ±Ë¢ÐÂ£¬Õâ¾ä²»Òª£¬ÎÂ¶ÈÒª64s²ÅË¢Ð
             -Â1´Î
 161   1        IIC_Start();
 162   1        SendByte(DS3231_WriteAddress);
 163   1        if(ack==0)
 164   1            return(0);      
 165   1        SendByte(random_addr);
 166   1        if(ack==0)
 167   1            return(0);
 168   1        Tmp=read_current();
 169   1        return Tmp;
 170   1      }         
 171          
 172          void ModifyTime(uchar address,uchar num)
 173          {
 174   1        uchar temp=0;
 175   1        if(address>6 && address <0) return;
 176   1        temp=HEX2BCD(num);
 177   1        write_byte(address,temp);
C51 COMPILER V9.57.0.0   3231                                                              02/16/2022 14:01:03 PAGE 4   

 178   1      }
 179          
 180          /*********************/ 
 181          //void get_Temperature()   //ÎÂ¶È»ñÈ¡ ÏÔÊ¾
 182          //{
 183          //  uchar Tem_L; 
 184          //  uchar Tem_H;
 185          //  Tem_H=read_randomTmp(DS3231_TEMPERATUREH);    //ÎÂ¶È ¸ß×Ö½Ú ÕûÊý²¿·Ö
 186          //  Tem_L=read_randomTmp(DS3231_TEMPERATUREL);   //ÎÂ¶È µÍ×Ö½Ú Ð¡Êý²¿·Ö
 187          //  
 188          //  Tem_L = (Tem_L>>6)*0.25*100;   //
 189          //  
 190          //  //Tem_H = 0xf7;  //-13µÄ²¹Âë£¬²âÊÔÓÃ
 191          //  //Tem_H = 0xf7;  //-9µÄ²¹Âë£¬²âÊÔÓÃ
 192          //  if(!(Tem_H & 0x80)) //ÕýÎÂ¶È
 193          //  { 
 194          //  
 195          //    /********ÏÔÊ¾ÎÂ¶È*********/
 196          //    if(Tem_H/10 > 0)
 197          //      //ÏÔÊ¾ÎÂ¶ÈÊ®Î»
 198          //    else
 199          //      //·ñÔòÎÂ¶ÈÊ®Î»Îª0²»ÏÔÊ¾
 200          //    //ÏÔÊ¾ÎÂ¶È¸öÎ»
 201          //    //ÏÔÊ¾Ð¡Êýµã
 202          //    //ÏÔÊ¾ÎÂ¶ÈÐ¡ÊýµÚ1Î»
 203          //    //ÏÔÊ¾ÎÂ¶ÈÐ¡ÊýµÚ2Î»
 204          //  }
 205          //  else
 206          //  { 
 207          //    if(Tem_H & 0x80)   //¸ºÎÂ¶È
 208          //    {
 209          //      Tem_H =(~Tem_H)+1; //»»Ëã³ÉÊµ¼ÊÎÂ¶ÈÖµ
 210          //        /ÏÔÊ¾¡°-¡±¸ººÅ
 211          //      if(Tem_H/10 > 0)
 212          //        //ÏÔÊ¾¸ºÎÂ¶ÈÊ®Î»
 213          //      else
 214          //        //¸ºÎÂ¶ÈÊ®Î»Îª0²»ÏÔ
 215          //      //ÏÔÊ¾¸ºÎÂ¶È¸öÎ»  
 216          //    }
 217          //  }
 218          //  //ÏÔÊ¾¡æ·ûºÅ
 219          //} 
 220          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    364    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
